<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Test.Controls.MenuControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:editor="clr-namespace:Test2d;assembly=Test2d.Editor"
             xmlns:converters="clr-namespace:Test.Converters"
             xmlns:controls="clr-namespace:Test.Controls"
             xmlns:p="clr-namespace:Test2d.UI.Wpf.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="20" d:DesignWidth="1324">
    <Menu Background="Transparent">
        <MenuItem Header="{x:Static p:Resources.MenuFile}">
            <MenuItem Header="{x:Static p:Resources.MenuFileNew}" 
                      Command="{Binding Commands.NewCommand}" CommandParameter="{Binding}" 
                      InputGestureText="Ctrl+N">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuFileOpen}" 
                      Command="{Binding Commands.OpenCommand}" 
                      InputGestureText="Ctrl+O">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuFileClose}" 
                      Command="{Binding Commands.CloseCommand}" 
                      InputGestureText="Ctrl+F4">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuFileSave}" 
                      Command="{Binding Commands.SaveCommand}" 
                      InputGestureText="Ctrl+S">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuFileSaveAs}" 
                      Command="{Binding Commands.SaveAsCommand}" 
                      InputGestureText="Ctrl+Shift+S">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuFileExport}" 
                      Command="{Binding Commands.ExportCommand}" 
                      CommandParameter="{Binding Editor.Project}" 
                      InputGestureText="Ctrl+E">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuFileSubMenuImport}">
                <MenuItem Header="{x:Static p:Resources.MenuFileImportStyle}" 
                          Command="{Binding Commands.ImportStyleCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportStyles}" 
                          Command="{Binding Commands.ImportStylesCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}" 
                          InputGestureText="">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportStyleLibrary}" 
                          Command="{Binding Commands.ImportStyleLibraryCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportStyleLibraries}" 
                          Command="{Binding Commands.ImportStyleLibrariesCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportGroup}" 
                          Command="{Binding Commands.ImportGroupCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportGroups}" 
                          Command="{Binding Commands.ImportGroupsCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}" 
                          InputGestureText="">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportGroupLibrary}" 
                          Command="{Binding Commands.ImportGroupLibraryCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportGroupLibraries}" 
                          Command="{Binding Commands.ImportGroupLibrariesCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportTemplate}" 
                          Command="{Binding Commands.ImportTemplateCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileImportTemplates}"
                          Command="{Binding Commands.ImportTemplatesCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuFileSubMenuExport}">
                <MenuItem Header="{x:Static p:Resources.MenuFileExportStyle}" 
                          Command="{Binding Commands.ExportStyleCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentStyleLibrary.CurrentStyle}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportStyles}" 
                          Command="{Binding Commands.ExportStylesCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}" 
                          InputGestureText="">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportStyleLibrary}" 
                          Command="{Binding Commands.ExportStyleLibraryCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportStyleLibraries}" 
                          Command="{Binding Commands.ExportStyleLibrariesCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportGroup}" 
                          Command="{Binding Commands.ExportGroupCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentGroupLibrary.CurrentGroup}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportGroups}" 
                          Command="{Binding Commands.ExportGroupsCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}" 
                          InputGestureText="">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportGroupLibrary}" 
                          Command="{Binding Commands.ExportGroupLibraryCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportGroupLibraries}" 
                          Command="{Binding Commands.ExportGroupLibrariesCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportTemplate}" 
                          Command="{Binding Commands.ExportTemplateCommand}" 
                          CommandParameter="{Binding Editor.Project.CurrentTemplate}" 
                          InputGestureText="">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuFileExportTemplates}" 
                          Command="{Binding Commands.ExportTemplatesCommand}" 
                          CommandParameter="{Binding Editor.Project}" 
                          InputGestureText="">
                </MenuItem>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuFileRecent}" 
                      ItemsSource="{Binding RecentProjects}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" ToolTip="{Binding Path}">
                        </TextBlock>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Command" Value="{Binding DataContext.Commands.OpenCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                        <Setter Property="CommandParameter" Value="{Binding Path}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuFileExit}" 
                      Command="{Binding Commands.ExitCommand}" 
                      InputGestureText="Alt+F4">
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{x:Static p:Resources.MenuEdit}">
            <MenuItem Header="{x:Static p:Resources.MenuEditUndo}" 
                      Command="{Binding Commands.UndoCommand}" 
                      InputGestureText="Ctrl+Z">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuEditRedo}" 
                      Command="{Binding Commands.RedoCommand}" 
                      InputGestureText="Ctrl+Y">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuEditCopyAsEmf}"
                      Command="{Binding Commands.CopyAsEmfCommand}" 
                      InputGestureText="Ctrl+Shift+C">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuEditCut}" 
                      Command="{Binding Commands.CutCommand}" 
                      CommandParameter="{Binding}" 
                      InputGestureText="Ctrl+X">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuEditCopy}" 
                      Command="{Binding Commands.CopyCommand}" 
                      CommandParameter="{Binding}" 
                      InputGestureText="Ctrl+C">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuEditPaste}" 
                      Command="{Binding Commands.PasteCommand}"
                      CommandParameter="{Binding}" 
                      InputGestureText="Ctrl+V">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuEditDelete}" 
                      Command="{Binding Commands.DeleteCommand}" 
                      CommandParameter="{Binding}" 
                      InputGestureText="Del">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuEditSelectAll}" 
                      Command="{Binding Commands.SelectAllCommand}" 
                      InputGestureText="Ctrl+A">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuEditDeselectAll}" 
                      Command="{Binding Commands.DeselectAllCommand}" 
                      InputGestureText="Esc">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuEditClearAll}" 
                      Command="{Binding Commands.ClearAllCommand}" 
                      InputGestureText="">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuEditGroup}" 
                      Command="{Binding Commands.GroupCommand}" 
                      InputGestureText="Ctrl+G">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuEditUngroup}" 
                      Command="{Binding Commands.UngroupCommand}" 
                      InputGestureText="Ctrl+U">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuEditOrder}">
                <MenuItem Header="{x:Static p:Resources.MenuEditOrderSendToBack}" 
                          Command="{Binding Commands.SendToBackCommand}" 
                          InputGestureText="Shift+-">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuEditOrderSendBackward}" 
                          Command="{Binding Commands.SendBackwardCommand}" 
                          InputGestureText="-">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuEditOrderBringForward}" 
                          Command="{Binding Commands.BringForwardCommand}" 
                          InputGestureText="+">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuEditOrderBringToFront}" 
                          Command="{Binding Commands.BringToFrontCommand}" 
                          InputGestureText="Shift++">
                </MenuItem>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{x:Static p:Resources.MenuView}">
            <MenuItem Header="{x:Static p:Resources.MenuViewZoom}">
                <MenuItem Header="{x:Static p:Resources.MenuViewZoomReset}" 
                          Command="{Binding Commands.ZoomResetCommand}" 
                          InputGestureText="Z">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuViewZoomExtent}" 
                          Command="{Binding Commands.ZoomExtentCommand}" 
                          InputGestureText="X">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuViewZoomAutofit}" 
                          IsCheckable="True" 
                          IsChecked="{Binding Editor.Renderers[0].State.EnableAutofit, Mode=TwoWay}"
                          InputGestureText="">
                </MenuItem>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuViewProjectWindow}" 
                      Command="{Binding Commands.ProjectWindowCommand}" 
                      InputGestureText="Ctrl+Alt+X">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewOptionsWindow}" 
                      Command="{Binding Commands.OptionsWindowCommand}" 
                      InputGestureText="Ctrl+Alt+O">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewTemplatesWindow}" 
                      Command="{Binding Commands.TemplatesWindowCommand}" 
                      InputGestureText="Ctrl+Alt+T">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuViewGroupsWindow}" 
                      Command="{Binding Commands.GroupsWindowCommand}" 
                      InputGestureText="Ctrl+Alt+G">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewDatabasesWindow}" 
                      Command="{Binding Commands.DatabasesWindowCommand}" 
                      InputGestureText="Ctrl+Alt+D">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewDatabaseWindow}" 
                      Command="{Binding Commands.DatabaseWindowCommand}" 
                      InputGestureText="Ctrl+Alt+B">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuViewContainerWindow}" 
                      Command="{Binding Commands.ContainerWindowCommand}" 
                      InputGestureText="Ctrl+Alt+N">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewDocumentWindow}" 
                      Command="{Binding Commands.DocumentWindowCommand}" 
                      InputGestureText="Ctrl+Alt+U">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuViewStylesWindow}" 
                      Command="{Binding Commands.StylesWindowCommand}" 
                      InputGestureText="Ctrl+Alt+S">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewLayersWindow}" 
                      Command="{Binding Commands.LayersWindowCommand}" 
                      InputGestureText="Ctrl+Alt+L">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewShapesWindow}" 
                      Command="{Binding Commands.ShapesWindowCommand}" 
                      InputGestureText="Ctrl+Alt+A">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewTemplateWindow}" 
                      Command="{Binding Commands.TemplateWindowCommand}" 
                      InputGestureText="Ctrl+Alt+M">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuViewStateWindow}" 
                      Command="{Binding Commands.StateWindowCommand}" 
                      InputGestureText="Ctrl+Alt+W">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewDataWindow}" 
                      Command="{Binding Commands.DataWindowCommand}" 
                      InputGestureText="Ctrl+Alt+I">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuViewStyleWindow}"
                      Command="{Binding Commands.StyleWindowCommand}" 
                      InputGestureText="Ctrl+Alt+Y">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuViewPropertiesWindow}" 
                      Command="{Binding Commands.PropertiesWindowCommand}" 
                      InputGestureText="F4">
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{x:Static p:Resources.MenuTool}">
            <MenuItem Header="{x:Static p:Resources.MenuToolNone}" 
                      Command="{Binding Commands.ToolNoneCommand}"
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.None}}" 
                      InputGestureText="N">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuToolSelection}" 
                      Command="{Binding Commands.ToolSelectionCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Selection}}"
                      InputGestureText="S">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuToolPoint}" 
                      Command="{Binding Commands.ToolPointCommand}"
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Point}}" 
                      InputGestureText="P">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuToolLine}" 
                      Command="{Binding Commands.ToolLineCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Line}}"
                      InputGestureText="L">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuToolArc}" 
                      Command="{Binding Commands.ToolArcCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Arc}}"
                      InputGestureText="A">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuToolBezier}" 
                      Command="{Binding Commands.ToolBezierCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Bezier}}"
                      InputGestureText="B">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuToolQBezier}" 
                      Command="{Binding Commands.ToolQBezierCommand}"
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.QBezier}}" 
                      InputGestureText="Q">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuToolPath}" 
                      Command="{Binding Commands.ToolPathCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Path}}"
                      InputGestureText="H">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuPathTool}"
                      IsEnabled="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Path}}">
                <MenuItem Header="{x:Static p:Resources.MenuPathToolLine}" 
                      Command="{Binding Commands.ToolLineCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.Line}}"
                      InputGestureText="L">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuPathToolArc}" 
                      Command="{Binding Commands.ToolArcCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.Arc}}"
                      InputGestureText="A">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuPathToolBezier}" 
                      Command="{Binding Commands.ToolBezierCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.Bezier}}"
                      InputGestureText="B">
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.MenuPathToolQBezier}" 
                      Command="{Binding Commands.ToolQBezierCommand}"
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.QBezier}}" 
                      InputGestureText="Q">
                </MenuItem>
                <Separator/>
                <MenuItem Header="{x:Static p:Resources.MenuPathToolMove}" 
                      Command="{Binding Commands.ToolMoveCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.Move}}"
                      InputGestureText="M">
                </MenuItem>
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuToolRectangle}" 
                      Command="{Binding Commands.ToolRectangleCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Rectangle}}"
                      InputGestureText="R">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuToolEllipse}" 
                      Command="{Binding Commands.ToolEllipseCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Ellipse}}"
                      InputGestureText="E">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuToolText}" 
                      Command="{Binding Commands.ToolTextCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Text}}"
                      InputGestureText="T">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuToolImage}" 
                      Command="{Binding Commands.ToolImageCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Image}}"
                      InputGestureText="I">
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{x:Static p:Resources.MenuData}">
            <MenuItem Header="{x:Static p:Resources.MenuDataImport}" 
                      Command="{Binding Commands.ImportDataCommand}" 
                      InputGestureText="">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuDataExport}" 
                      Command="{Binding Commands.ExportDataCommand}" 
                      InputGestureText="">
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{x:Static p:Resources.MenuTemplate}" 
                  Tag="{Binding}"
                  ItemsSource="{Binding Editor.Project.Templates}">
            <MenuItem.Resources>
                <converters:ObjectEqualityConverter x:Key="ObjectEqualityConverter"/>
            </MenuItem.Resources>
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="Command" Value="{Binding Path=Tag.Commands.ApplyTemplateCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                    <Binding Path="Tag.Editor.Project.CurrentContainer.Template" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}"/>
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <MenuItem Header="{x:Static p:Resources.MenuOptions}">
            <MenuItem Header="{x:Static p:Resources.MenuOptionsDefaultIsStroked}" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.DefaultIsStroked, Mode=OneWay}"
                      Command="{Binding Commands.DefaultIsStrokedCommand}" 
                      InputGestureText="K">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuOptionsDefaultIsFilled}" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.DefaultIsFilled, Mode=OneWay}"
                      Command="{Binding Commands.DefaultIsFilledCommand}" 
                      InputGestureText="F">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuOptionsDefaultIsClosed}" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.DefaultIsClosed, Mode=OneWay}"
                      Command="{Binding Commands.DefaultIsClosedCommand}" 
                      InputGestureText="D">
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.MenuOptionsDefaultIsSmoothJoin}" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.DefaultIsSmoothJoin, Mode=OneWay}"
                      Command="{Binding Commands.DefaultIsSmoothJoinCommand}" 
                      InputGestureText="J">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuOptionsSnapToGrid}" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.SnapToGrid, Mode=OneWay}"
                      Command="{Binding Commands.SnapToGridCommand}" 
                      InputGestureText="G">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuOptionsTryToConnect}" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.TryToConnect, Mode=OneWay}"
                      Command="{Binding Commands.TryToConnectCommand}" 
                      InputGestureText="C">
            </MenuItem>
        </MenuItem>
        <MenuItem Header="{x:Static p:Resources.MenuWindow}">
            <MenuItem Header="{x:Static p:Resources.MenuWindowLoadLayout}" 
                      Command="{Binding Commands.LoadWindowLayoutCommand}" 
                      InputGestureText="">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuWindowSaveLayout}" 
                      Command="{Binding Commands.SaveWindowLayoutCommand}" 
                      InputGestureText="">
            </MenuItem>
            <Separator/>
            <MenuItem Header="{x:Static p:Resources.MenuWindowResetLayout}" 
                      Command="{Binding Commands.ResetWindowLayoutCommand}" 
                      InputGestureText="">
            </MenuItem>
        </MenuItem>
    </Menu>
</UserControl>
