<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Test.Controls.StatusControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:editor="clr-namespace:Test2d;assembly=Test2d.Editor"
             xmlns:converters="clr-namespace:Test.Converters"
             xmlns:controls="clr-namespace:Test.Controls"
             xmlns:p="clr-namespace:Test2d.UI.Wpf.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="20" d:DesignWidth="1324">
    <StatusBar Background="Transparent">
        <StatusBar.ItemsPanel>
            <ItemsPanelTemplate>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                </Grid>
            </ItemsPanelTemplate>
        </StatusBar.ItemsPanel>
        <StatusBarItem Grid.Column="0">
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}: {1}">
                            <Binding Source="{x:Static p:Resources.StatusDocuments}"/>
                            <Binding Path="Editor.Project.Documents.Length" FallbackValue="{x:Static p:Resources.StatusNoDocuments}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" - " VerticalAlignment="Center"/>
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}: {1}">
                            <Binding Source="{x:Static p:Resources.StatusContainers}"/>
                            <Binding Path="Editor.Project.CurrentDocument.Containers.Length" FallbackValue="{x:Static p:Resources.StatusNoContainers}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" - " VerticalAlignment="Center"/>
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}: {1}">
                            <Binding Source="{x:Static p:Resources.StatusLayers}"/>
                            <Binding Path="Editor.Project.CurrentContainer.Layers.Length" FallbackValue="{x:Static p:Resources.StatusNoLayers}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" - " VerticalAlignment="Center"/>
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}: {1}">
                            <Binding Source="{x:Static p:Resources.StatusShapes}"/>
                            <Binding Path="Editor.Project.CurrentContainer.CurrentLayer.Shapes.Length" FallbackValue="{x:Static p:Resources.StatusNoShapes}"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" - " VerticalAlignment="Center"/>
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="{x:Static p:Resources.StatusSelectedOne}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Editor.Renderers[0].State.SelectedShape}" Value="{x:Null}">
                                    <Setter Property="Text">
                                        <Setter.Value>
                                            <MultiBinding StringFormat="{}{0}: {1}">
                                                <Binding Source="{x:Static p:Resources.StatusSelected}"/>
                                                <Binding Path="Editor.Renderers[0].State.SelectedShapes.Count" FallbackValue="{x:Static p:Resources.StatusNoSelected}"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </StatusBarItem>
        <StatusBarItem Grid.Column="2">
            <StatusBarItem.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{x:Static p:Resources.MenuToolNone}" 
                              Command="{Binding Commands.ToolNoneCommand}"
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.None}}" 
                              InputGestureText="N">
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.MenuToolSelection}" 
                              Command="{Binding Commands.ToolSelectionCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Selection}}"
                              InputGestureText="S">
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.MenuToolPoint}" 
                              Command="{Binding Commands.ToolPointCommand}"
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Point}}" 
                              InputGestureText="P">
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.MenuToolLine}" 
                              Command="{Binding Commands.ToolLineCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Line}}"
                              InputGestureText="L">
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuToolArc}" 
                              Command="{Binding Commands.ToolArcCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Arc}}"
                              InputGestureText="A">
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuToolBezier}" 
                              Command="{Binding Commands.ToolBezierCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Bezier}}"
                              InputGestureText="B">
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuToolQBezier}" 
                              Command="{Binding Commands.ToolQBezierCommand}"
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.QBezier}}" 
                              InputGestureText="Q">
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.MenuToolPath}" 
                              Command="{Binding Commands.ToolPathCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Path}}"
                              InputGestureText="H">
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.MenuToolRectangle}" 
                              Command="{Binding Commands.ToolRectangleCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Rectangle}}"
                              InputGestureText="R">
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuToolEllipse}" 
                              Command="{Binding Commands.ToolEllipseCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Ellipse}}"
                              InputGestureText="E">
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.MenuToolText}" 
                              Command="{Binding Commands.ToolTextCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Text}}"
                              InputGestureText="T">
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.MenuToolImage}" 
                              Command="{Binding Commands.ToolImageCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Image}}"
                              InputGestureText="I">
                    </MenuItem>
                </ContextMenu>
            </StatusBarItem.ContextMenu>
            <TextBlock VerticalAlignment="Center">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding Path=Editor.CurrentTool}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.None}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolNone}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Selection}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolSelection}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Point}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolPoint}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Line}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolLine}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Arc}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolArc}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Bezier}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolBezier}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.QBezier}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolQBezier}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Path}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolPath}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Rectangle}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolRectangle}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Ellipse}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolEllipse}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Text}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolText}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentTool}" Value="{x:Static editor:Tool.Image}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusToolImage}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StatusBarItem>
        <Separator Grid.Column="3">
            <Separator.Style>
                <Style TargetType="Separator">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Path}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Separator.Style>
        </Separator>
        <StatusBarItem Grid.Column="4">
            <StatusBarItem.Style>
                <Style TargetType="StatusBarItem">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Path}}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StatusBarItem.Style>
            <StatusBarItem.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{x:Static p:Resources.MenuPathToolLine}" 
                              Command="{Binding Commands.ToolLineCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.Line}}"
                              InputGestureText="L">
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuPathToolArc}" 
                              Command="{Binding Commands.ToolArcCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.Arc}}"
                              InputGestureText="A">
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuPathToolBezier}" 
                              Command="{Binding Commands.ToolBezierCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.Bezier}}"
                              InputGestureText="B">
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.MenuPathToolQBezier}" 
                              Command="{Binding Commands.ToolQBezierCommand}"
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.QBezier}}" 
                              InputGestureText="Q">
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.MenuPathToolMove}" 
                              Command="{Binding Commands.ToolMoveCommand}" 
                              IsCheckable="False"
                              IsChecked="{Binding Path=Editor.CurrentPathTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:PathTool.Move}}"
                              InputGestureText="M">
                    </MenuItem>
                </ContextMenu>
            </StatusBarItem.ContextMenu>
            <TextBlock VerticalAlignment="Center">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding Path=Editor.CurrentPathTool}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentPathTool}" Value="{x:Static editor:PathTool.Line}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusPathToolLine}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentPathTool}" Value="{x:Static editor:PathTool.Arc}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusPathToolArc}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentPathTool}" Value="{x:Static editor:PathTool.Bezier}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusPathToolBezier}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentPathTool}" Value="{x:Static editor:PathTool.QBezier}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusPathToolQBezier}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Editor.CurrentPathTool}" Value="{x:Static editor:PathTool.Move}">
                                <Setter Property="Text" Value="{x:Static p:Resources.StatusPathToolMove}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StatusBarItem>
        <Separator Grid.Column="5"/>
        <StatusBarItem Grid.Column="6">
            <CheckBox IsChecked="{Binding Editor.Project.Options.DefaultIsStroked}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="{x:Static p:Resources.StatusOptionsStroked}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Editor.Project.Options.DefaultIsStroked, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="7"/>
        <StatusBarItem Grid.Column="8">
            <CheckBox IsChecked="{Binding Editor.Project.Options.DefaultIsFilled}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="{x:Static p:Resources.StatusOptionsFilled}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Editor.Project.Options.DefaultIsFilled, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="9"/>
        <StatusBarItem Grid.Column="10">
            <CheckBox IsChecked="{Binding Editor.Project.Options.DefaultIsClosed}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="{x:Static p:Resources.StatusOptionsClosed}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Editor.Project.Options.DefaultIsClosed, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="11"/>
        <StatusBarItem Grid.Column="12">
            <CheckBox IsChecked="{Binding Editor.Project.Options.DefaultIsSmoothJoin}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="{x:Static p:Resources.StatusOptionsSmoothJoin}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Editor.Project.Options.DefaultIsSmoothJoin, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="13"/>
        <StatusBarItem Grid.Column="14">
            <CheckBox IsChecked="{Binding Editor.Project.Options.SnapToGrid}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="{x:Static p:Resources.StatusOptionsSnap}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Editor.Project.Options.SnapToGrid, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="15"/>
        <StatusBarItem Grid.Column="16">
            <CheckBox IsChecked="{Binding Editor.Project.Options.TryToConnect}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="{x:Static p:Resources.StatusOptionsConnect}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Editor.Project.Options.TryToConnect, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="17"/>
        <StatusBarItem Grid.Column="18">
            <CheckBox IsChecked="{Binding Editor.Renderers[0].State.EnableAutofit}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="{x:Static p:Resources.StatusOptionsAutofit}" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Editor.Renderers[0].State.EnableAutofit, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
    </StatusBar>
</UserControl>
